//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations.
//


package com.luckofwise.zipsearch;

import java.sql.SQLException;
import android.os.Bundle;
import android.os.Handler;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.EditText;
import android.widget.ListView;
import com.googlecode.androidannotations.api.BackgroundExecutor;
import com.j256.ormlite.android.apptools.OpenHelperManager;
import com.j256.ormlite.dao.DaoManager;
import com.j256.ormlite.support.ConnectionSource;
import com.luckofwise.zipsearch.R.layout;
import com.luckofwise.zipsearch.adapter.LocationAdapter_;
import com.luckofwise.zipsearch.data.DatabaseHelper;
import com.luckofwise.zipsearch.data.Location;
import com.luckofwise.zipsearch.rest.RestClient_;

public final class SearchFragment_
    extends SearchFragment
{

    private View contentView_;
    private ConnectionSource connectionSource_;
    private Handler handler_ = new Handler();

    private void init_(Bundle savedInstanceState) {
        mClient = new RestClient_();
        connectionSource_ = OpenHelperManager.getHelper(getActivity(), DatabaseHelper.class).getConnectionSource();
        try {
            mLocationDao = DaoManager.createDao(connectionSource_, Location.class);
        } catch (SQLException e) {
            Log.e("SearchFragment_", "Could not create DAO", e);
        }
        mLocationAdapter = LocationAdapter_.getInstance_(getActivity());
    }

    @Override
    public void onCreate(Bundle savedInstanceState) {
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
    }

    private void afterSetContentView_() {
        editTextKeyword = ((EditText) findViewById(com.luckofwise.zipsearch.R.id.editTextKeyword));
        listViewLocations = ((ListView) findViewById(com.luckofwise.zipsearch.R.id.listViewLocations));
        {
            AdapterView<?> view = ((AdapterView<?> ) findViewById(com.luckofwise.zipsearch.R.id.listViewLocations));
            if (view!= null) {
                view.setOnItemClickListener(new OnItemClickListener() {


                    @Override
                    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                        listViewLocations(((Location) parent.getAdapter().getItem(position)));
                    }

                }
                );
            }
        }
        ((LocationAdapter_) mLocationAdapter).afterSetContentView_();
        init();
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        contentView_ = super.onCreateView(inflater, container, savedInstanceState);
        if (contentView_ == null) {
            contentView_ = inflater.inflate(layout.fragment_search, container, false);
        }
        return contentView_;
    }

    @Override
    public void onViewCreated(View view, Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);
        afterSetContentView_();
    }

    public View findViewById(int id) {
        if (contentView_ == null) {
            return null;
        }
        return contentView_.findViewById(id);
    }

    public static SearchFragment_.FragmentBuilder_ builder() {
        return new SearchFragment_.FragmentBuilder_();
    }

    @Override
    public void showLocations() {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                try {
                    SearchFragment_.super.showLocations();
                } catch (RuntimeException e) {
                    Log.e("SearchFragment_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void search() {
        BackgroundExecutor.execute(new Runnable() {


            @Override
            public void run() {
                try {
                    SearchFragment_.super.search();
                } catch (RuntimeException e) {
                    Log.e("SearchFragment_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    public static class FragmentBuilder_ {

        private Bundle args_;

        private FragmentBuilder_() {
            args_ = new Bundle();
        }

        public SearchFragment build() {
            SearchFragment_ fragment_ = new SearchFragment_();
            fragment_.setArguments(args_);
            return fragment_;
        }

    }

}
